#!/usr/bin/env python2.7
#
# Watch one or more files, exiting when a program finishes writing to
# one of them (useful in "for" loops at the command line).

import os
import subprocess
import sys
import time

def main():
    args = sys.argv[1:]
    try:
        i = args.index('--')
    except ValueError:
        print >>sys.stderr, 'usage: ,watch cmd [arg...] -- [file file...]'
        sys.exit(2)

    cmd = args[:i]
    paths = args[i+1:]

    if not paths:
        paths = list(python_files())

    while True:
        subprocess.call(cmd)
        if not all(os.path.exists(p) for p in paths):
            print('  Waiting for files to return')
            time.sleep(1.0)
        print('-' * 20)
        subprocess.check_call(['inotifywait',
                               '-e', 'CLOSE_WRITE',
                               '-e', 'DELETE_SELF',
                               '--quiet',
                               '--quiet',
                               ] + paths)

def python_files():
    for dirpath, dirnames, filenames in os.walk('.'):
        for filename in filenames:
            if not filename.startswith('.#') and filename.endswith('.py'):
                yield os.path.join(dirpath, filename)

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        pass
