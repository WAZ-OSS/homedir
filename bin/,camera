#!/bin/bash

set -e

# Mount the camera.

if ! [ -d /media/brandon/disk ]
then
    gio mount -m -d /dev/sdb1
    camera=/media/brandon/*
    trap "gio mount -u $camera" EXIT
fi

# Generate a list of images currently on the camera, each prefixed with
# the Y-M-D date of its modify time.

dir="/media/br*/*/DCIM"
(cd $dir; find -type f -printf '%TY-%Tm-%Td %P\n' > /tmp/camera-filenames)

# If no argument was provided on the commandline, offer the filenames
# found on the camera so the user can select a cut-off date for the
# files they want to copy in.

if [ -z "$1" ]
then
    awk '{print $1}' /tmp/camera-filenames | sort -u
    exit
fi

# An argument was offered!  Filter the list of images.

V=$1 awk 'substr($1, 1, length(ENVIRON["V"])) == ENVIRON["V"] {print $2}' \
 /tmp/camera-filenames \
 > /tmp/camera-filenames2

echo Selected $(wc -l /tmp/camera-filenames2 | awk '{print $1}') out of  $(wc -l /tmp/camera-filenames | awk '{print $1}') photographs
echo 'From' $(head -1 /tmp/camera-filenames2) \
     'to' $(tail -1 /tmp/camera-filenames2)

# If no second argument was given, do a dry run: merely print what we
# would copy under these circumstances.

if [ -z "$2" ]
then
    echo '(Re-run adding a "go" argument to copy into current directory)'
    exit 2
fi

(cd $dir; tar cf - -T /tmp/camera-filenames2 --transform "s|/|-|") \
    | tar xvkf -
